letters = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
points = [1, 3, 3, 2, 1, 4, 2, 4, 1, 8, 5, 1, 3, 4, 1, 3, 10, 1, 1, 1, 1, 4, 4, 8, 4, 10]
letter_to_points = {key:value for key, value in zip(letters, points)}
letter_to_points[" "] = 0
#print(letter_to_points)

# make letter_to_points disctionary to handle lowercases as well
for letter in letters:
  letter_lower = letter.lower()
  letter_to_points[letter_lower] = letter_to_points.get(letter, 0)
#print(letter_to_points)

# --------------------------------------
# create a function that takes a word and return the points
def score_word(word):
  point_total = 0
  for i in word:
    point_total += letter_to_points.get(i, 0)
  return point_total

# test the function
brownie_points = score_word("BROWNIE")
#print(brownie_points)

#----------------------------------------------
# a dictionary to map players to list of words they played
player_to_words = {"player1": ["BLUE", "TENNIS", "EXIT"], "wordNerd": ["EARTH", "EYES", "MACHINE"], "Lexi Con": ["EARSER", "BELLY", "HUSKY"], "Prof Reader": ["ZAP", "COMA", "PERIOD"]}

player_to_points = {}
for player, words in player_to_words.items():
  player_points = 0
  for word in words:
    player_points += score_word(word)
  player_to_points[player] = player_points

print(player_to_points)

#----------------------------------------------
# create a function that takes a player and a word and add them to the list of words they played
def play_word(player, word):
  value1 = player_to_words.get(player, [])
  value1.append(word)
  player_to_words[player] = value1
  return player_to_words

#test the play_word function
play_word("Mina", "ABC")
#print(player_to_words)

#--------------------------------------------
# a function that can be called any time a word is played
def update_point_total(player,word):
  player_point = player_to_points.get(player, 0)
  player_point += score_word(word)
  player_to_points[player] = player_point
  print(player_to_points)

# test the update_point_total function
update_point_total("Mina", "CaTZzZ")


